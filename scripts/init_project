#!/bin/bash
#
# $Id: init_project 9 2003-02-12 01:57:52Z brc $
# $Log$
# Revision 1.1  2003/02/12 01:57:52  brc
# Scripts used to synchronise the running of CUBE and friends in
# the NOAA mold.
#
#
# File:		init_project
# Purpose:	Initialise a project MapSheets and Fieldsheets given the surface
# Date:		14 September 2002
#

# makefieldsheet(sheet, component)
# MapSheet file ---^        ^
# Component (e.g., depth) --'
#
makefieldsheet() {
	sheet=$1
	component=$2
	# Make a CARIS initialisation file in order to construct the required Fieldsheets
	mkdir -p ${BASE}/Fieldsheets/${PROJECT}/${component}
	grep bounds ${sheet} | tr -s '()m,' '    ' | cut -d' ' -f2-5 |\
	{
		read x0 y0 x1 y1;
		# Make the .fsh Fieldsheet definition file
		echo "$y1 $y0 - p $x1 $x0 - p" | dc | tr '\n' ' ' |\
		{
			read height width;
			cat <<- FSH
			[HIPS FIELDSHEET DEFINITION VERSION 1.00]
			# WARNING: Do not edit this file.
			
			[SHEET POSITION]
			CORNER = $x0 $y0
			DIMENSIONS = $width $height
			ROTATION = 0.000
			COORDINATESYSTEMKEY = UTM-${UTMZONE}N-Nad83
			
			[PRODUCTS]
			"5m" weightedgrid
			"1m" weightedgrid
			"composite" weightedgrid
			"composite_uncert" weightedgrid
			"comp_combo_iho1" weightedgrid
			
			[VIEWS]
			VIEW = "View 1"
			"Track Lines" ON
			"Field Sheet" ON
			"5m" ON
			"1m" ON
			"composite" ON
			"composite_uncert" ON
			"comp_combo_iho1" ON
			FSH
		} >${BASE}/Fieldsheets/${PROJECT}/${component}/${component}.fsh
		cat <<- EOF
		-file="${NTBASE}\\Fieldsheets\\${PROJECT}\\${component}\\${component}"
		automake
		${component}
		nemr
		um
		$x0
		$y0
		$x1
		$y0
		$x1
		$y1
		$x0
		$y1
		Y
		${UTMZONE}
		North
		20000
		NA83
		0.01
		0.001
		0
		0
		Q
		EOF
	} >${BASE}/processing/sdfs/${component}.caris
	echo "C:\\CARIS\\bin\\makecari < ${BASE}\\processing\\sdfs\\${component}.caris" \
		>>${BASE}/processing/init/makesheets.bat
}

if [ ! -f ${PWD}/config/setup ]
then
	echo "Error: project is not set up correctly (this script can only be"
	echo "       run from the \$BASE/processing directory so that the config"
	echo "       scripts can be found).  Please rebuild project."
	exit 1
fi

START=`date --utc +"%H:%M:%S %d %b %Y"`
echo "$START: start init_project: $*" >>./libccom.log

# Get configuration script set up by the setup_project script.  This gives
# lists of platforms, data locations, etc.
. ${PWD}/config/setup

if [ ! -d ${BASE}/HDCS_Data ]
then
	echo "Error: can't find ${BASE}/HDCS_Data for raw data input."
	exit 1
fi

if [ ! -f ${INITSURF} ]
then
	echo "Error: this project was built without an initialisation surface."
	echo "       you need to either have one, or make one and set the"
	echo "       INITSURF variable in ${CONFIGDIR}/setup."
	exit 1
fi

# Get information on the initialisation GUTM for CARIS Session files and combo GUTMs/Fieldsheets
grep LOCAL_ORIGIN ${INITSURF} | cut -d' ' -f2,3 >/tmp/tmphdr.$$
grep COLS_ROWS ${INITSURF} | cut -d' ' -f2,3 >>/tmp/tmphdr.$$
grep CELLSIZE ${INITSURF} | cut -d' ' -f2 >>/tmp/tmphdr.$$
cat /tmp/tmphdr.$$ | tr '\n' ' ' |\
	awk '{x1=$1+$3*$5;y1=$2+$4*$5;printf("SW = %f, %f\nNE = %f, %f\n", $1, $2, x1, y1);}' \
		>/tmp/tmploc.$$
cat /tmp/tmphdr.$$ | tr '\n' ' ' |\
	awk '{x1=$1+$3*$5;y1=$2+$4*$5;printf("bounds (%f m, %f m, %f m, %f m);\n", $1, $2, x1, y1);}' \
		>/tmp/initbounds.$$

basesheets=`ls ${BASE}/processing/sdfs/*.sdf`
echo "init_project: making perday and cumulative SDFs, and initialising cumulatives ..."
for sheet in ${basesheets}
do
	sdfbase=`basename ${sheet%.sdf}`
	maskbase=`echo ${sdfbase} | cut -d- -f1`
	for shtset in perday cumulative
	do
		# Construct the sheet-set specific SDF file
		sed -e "1,\$s|BACKSTORE|${BASE}/processing/sheets/${shtset}/${sdfbase}.sht|" ${sheet}\
			>${BASE}/processing/sdfs/${sdfbase}_${shtset}.sdf
	done
	# Construct the cumulative MapSheets only (since the per-days are just rolling copies of these.
	echo "init_project: initialising ${BASE}/processing/sheets/cumulative/${sdfbase}.sht ..."
	initsheet -i 2 -a cube -p -u 5.0 -f ${INITPAR} \
		-m ${BASE}/processing/init/${maskbase}.tif \
		${BASE}/processing/sdfs/${sdfbase}_cumulative.sdf \
		${INITSURF} \
		${BASE}/processing/sheets/cumulative/${sdfbase}.sht
done
makefieldsheet /tmp/initbounds.$$ depth
makefieldsheet /tmp/initbounds.$$ uncrt
makefieldsheet /tmp/initbounds.$$ hypstr
makefieldsheet /tmp/initbounds.$$ nhypo

# Next, make a CARIS Session file for the sheets so that they can be opened
# in one go --- unfortunately, this doesn't quite work, because a session file without
# any data lines won't open.  Unfortunately, we don't have any information on data when
# this is being built, so these session files need to be modified somewhat.  It's a good
# base to work from, however.
CDST=${BASE}/Session/cube.hsf
# Create the sheet header
NOW=`date --utc +"%k:%M %d/%m/%Y"`
cat >${CDST} <<- EOF
	[HIPS WORKSPACE DEFINITION VERSION 1.10]
	# WARNING: Do not edit this file.
	
	[WORKSPACE]
	NAME = cube
	OWNER = administrator
	LAST MODIFIED = $NOW
	CREATED = $NOW
	MODIFIED BY USER = administrator
	LINE TYPE = SHIP_ONLY
	
	[VIEW EXTENT]
	EOF
cat /tmp/tmploc.$$ >>${CDST}
cat >>${CDST} <<- EOF
	
	[PROJECT DATA]
	EOF
for component in depth uncrt hypstr nhypo
do
	echo "FIELD SHEET = ${PROJECT}\\${component}\\${component}.fsh" \
		>>${CDST}
done
echo "PROJECT DEFINITION = ${PROJECT}\\${PROJECT}.hpf" >>${CDST}
cat >>${CDST} <<- EOF
	
	[DATA LAYERS]
	LAYER = Ship Track Lines,ON,COLLAPSE,22
	EOF
for component in depth uncrt hypstr nhypo
do
	echo "LAYER = ${component},ON,COLLAPSE,0" >>${CDST}
done
echo "ACTIVE LAYER = depth" >>${CDST}
rm -f /tmp/tmploc.$$ /tmp/tmphdr.$$ /tmp/initbounds.$$

END=`date --utc +"%H:%M:%S %d %b %Y"`
echo "$END: end init_project: $*" >>./libccom.log

exit 0
